---
- name: create redis service for RHEL7+
  template:
    src: "redis.service.j2"
    dest: /usr/lib/systemd/system/{{ redis_systemd_service_name }}.service
    mode: 0755
  when: redis_as_service

- name: set redis to start at boot
  service:
    name: "{{ redis_systemd_service_name }}"
    enabled: yes
  when: redis_as_service

# Check then create log dir to prevent aggressively overwriting permissions
- name: check if log directory exists
  stat:
    path: "{{ redis_logfile|dirname }}"
  register: logdir
  changed_when: false
  when: redis_logfile != '""'

- name: create log directory if it does not exist
  file:
    state: directory
    path: "{{ redis_logfile|dirname }}"
    owner: "{{ redis_user }}"
    group: "{{ redis_group }}"
  when:
    - redis_logfile != '""'
    - not logdir.stat.exists

- name: touch the log file
  file:
    state: touch
    path: "{{ redis_logfile }}"
    owner: "{{ redis_user }}"
    group: "{{ redis_group }}"
  when: redis_logfile != '""'
  changed_when: false

- name: check if pid directory exists
  stat:
    path: "{{ redis_pidfile|dirname }}"
  register: piddir
  changed_when: false
  when: redis_pidfile != '""'

- name: create pid directory if it does not exist
  file:
    state: directory
    path: "{{ redis_pidfile|dirname }}"
    owner: "{{ redis_user }}"
    group: "{{ redis_group }}"
  when:
    - redis_pidfile != '""'
    - not piddir.stat.exists

- name: create redis etc directory
  file:
    state: directory
    path: "{{ redis_config_dir }}"
    owner: "{{ redis_user }}"
    group: "{{ redis_group }}"

- name: create redis config file
  template:
    src: redis.conf.j2
    dest: "{{ redis_config }}"
    owner: "{{ redis_user }}"
  notify: restart redis

# Flush handlers before ensuring the service is started to prevent
# a start and then restart
- name: flush handlers to apply config changes
  meta: flush_handlers

- name: ensure redis is running
  service:
    name: "{{ redis_systemd_service_name }}"
    state: started
  when: redis_as_service
